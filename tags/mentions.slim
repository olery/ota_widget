---
---
mentions.mdc-image-list__item
  .mentions.block.mdc-elevation--z1
    .material-icons.info
      'info
    h2
      '{t('mentions.title')}

    .mentions-row
      .mention each='{r in ratings}'
        .ratings
          .title
            strong
              '{t('opinions.topics.'+r.topic, {default: r.label})}
          .rating-bar
            .rating-value-bar class='{w.mentions.scoreClass(r)}' style='width: {10*r.score}%'
          .rating-value
            '{w.mentions.scoreLabel(r)}

        .times
          '{r.opinions_count} {t('mentions.times')}

        /.mention-score class='{w.mentions.scoreClass(r)}'
        /  '{w.mentions.scoreLabel(r)}

  javascript:
    ota_widget.ui.tagClass.bind(this)()

    load() {
      tippy('mentions .material-icons.info', {
        content: this.t('mentions.description'),
      })

      this.ratings = {}
      _.each(this.d.mentions, function(m) {
        if (m.topic == 'overall') return this.ratings[m.topic] = m
        if (!m.rating) return

        var topic  = m.rating.key
        var rating = (this.ratings[topic] = this.ratings[topic] || _.merge({
          topic:             topic,
          neutral_opinions:  0,
          negative_opinions: 0,
          positive_opinions: 0,
          opinions_count:    0,
        }, m.rating))
        rating.neutral_opinions  += m.neutral_opinions
        rating.negative_opinions += m.negative_opinions
        rating.positive_opinions += m.positive_opinions
        rating.opinions_count    += m.opinions_count

      }.bind(this))

      this.ratings = _.orderBy(_.values(this.ratings), 'opinions_count', 'desc')
    }

    this.on('mount',  this.load)
    this.on('update', this.load)
